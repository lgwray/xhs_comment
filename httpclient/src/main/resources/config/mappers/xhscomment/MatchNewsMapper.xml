<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.shinc.orm.mybatis.mappers.xhscomment.MatchNewsMapper" >
  <resultMap id="BaseResultMap" type="MatchNews" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="news_type" property="newsType" jdbcType="VARCHAR" />
    <result column="news_uuid" property="newsUuid" jdbcType="CHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="spider_time" property="spiderTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="cmt_num" property="matchCommentsNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, news_type, news_uuid, title, url, DATE_FORMAT(parent_publish_date , '%Y-%m-%d %H:%i') spider_time, remark
  </sql>
  
  <select id="getMatchNewsBatch" resultMap="BaseResultMap" parameterType="java.util.List">
  	select
  		id, news_type, news_uuid, title, url, DATE_FORMAT(parent_publish_date , '%Y-%m-%d %H:%i') spider_time
  	from
  		sp2_match_news
  	where
  		id in
    	 <foreach collection="list" item="item" index="index"  open="(" separator="," close=")" >
   			#{item,jdbcType=INTEGER}
		</foreach>  	
  </select>
  
  <select id="getMatchNewsByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select
  		tb_a.id, tb_a.news_type, tb_a.news_uuid, tb_a.title, tb_a.url, DATE_FORMAT(tb_a.parent_publish_date , '%Y-%m-%d %H:%i') spider_time, tb_a.cmt_num
  	from
  		sp2_match_news tb_a
  	inner join
  		sp2_article_match_news tb_b
  	on
  		tb_b.match_news_id=tb_a.id
  	where
  		tb_b.article_id=#{articleId}
  	order by tb_a.cmt_num desc
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sp2_match_news
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sp2_match_news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="MatchNews" >
    insert into sp2_match_news (id, news_type, news_uuid, 
      title, url, parent_publish_date, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{newsType,jdbcType=VARCHAR}, #{newsUuid,jdbcType=CHAR}, 
      #{title,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{spiderTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="MatchNews" >
    insert into sp2_match_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="newsType != null" >
        news_type,
      </if>
      <if test="newsUuid != null" >
        news_uuid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="spiderTime != null" >
        parent_publish_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="newsType != null" >
        #{newsType,jdbcType=VARCHAR},
      </if>
      <if test="newsUuid != null" >
        #{newsUuid,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="spiderTime != null" >
        #{spiderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="MatchNews" >
    update sp2_match_news
    <set >
      <if test="newsType != null" >
        news_type = #{newsType,jdbcType=VARCHAR},
      </if>
      <if test="newsUuid != null" >
        news_uuid = #{newsUuid,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="spiderTime != null" >
        parent_publish_date = #{spiderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="MatchNews" >
    update sp2_match_news
    set news_type = #{newsType,jdbcType=VARCHAR},
      news_uuid = #{newsUuid,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_publish_date = #{spiderTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap id="getMatchNewsCountRes" type="java.util.Map" >
    <result column="article_id" property="article_id" jdbcType="VARCHAR" />
    <result column="matchNewsCount" property="matchNewsCount" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getMatchNewsCount" resultMap="getMatchNewsCountRes" >
  	SELECT 
  		a.article_id, count(a.article_id) matchNewsCount 
  	FROM 
  		sp2_article_match_news a 
  	where 1 = 1
  		<if test="list!=null and list.size!=0">
			and	a.article_id in
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
			  #{item.id}  
		    </foreach>  
		</if>
  	group by article_id;
  </select>
</mapper>